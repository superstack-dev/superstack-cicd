on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      bump:
        required: false
        default: true
        type: boolean
    secrets:
      PYPI_TOKEN:
        required: true
      PYPI_UPLOAD_URL:
        required: true

jobs:
  deploy:
    name: Deploy to SuperStack Pypi
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Setup Git
        if: ${{ inputs.bump == true }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - uses: actions-ecosystem/action-get-merged-pull-request@v1
        id: get-merged-pull-request
        if: ${{ inputs.bump == true }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions-ecosystem/action-release-label@v1
        id: release-label
        if: ${{ steps.get-merged-pull-request.outputs.title != null }}
        with:
          labels: ${{ steps.get-merged-pull-request.outputs.labels }}

      - name: Install Deploy Packages
        run: pip install -U bump2version build

      - name: Bump Version
        run: |
          if [ ${{ inputs.bump }} = true ]
          then
            if [ -n "${{ steps.release-label.outputs.level }}"  ]
            then
              git tag --sort=taggerdate | grep -E "v(.*)?" | tail -1 | xargs -I {} bump2version --current-version {} ${{ steps.release-label.outputs.level }} --verbose
            else
              git tag --sort=taggerdate | grep -E "v(.*)?" | tail -1 | xargs -I {} bump2version --current-version {} patch --verbose
            fi
          else
            git tag --sort=taggerdate | grep -E "v(.*)?" | tail -1 | xargs -I {} bump2version --current-version {} --new-version {} fast-forward --verbose
          fi

      - name: Build source code
        run: python -m build --sdist --wheel --outdir dist/

      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __github__
          password: ${{ secrets.PYPI_TOKEN }}
          repository_url: ${{ secrets.PYPI_UPLOAD_URL }}
          verbose: true
          verify_metadata: false

      - name: Push Git Tags
        if: ${{ inputs.bump == true }}
        run: git push origin --tags
